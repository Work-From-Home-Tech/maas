---
- name: 'Setup MAAS Region and Controller'
  hosts: localhost
  connection: local
  become: true

  tasks:
    # =========================
    # Pre-install checks
    # ==========================
    #
    - name: 'Read ID of OS distribution.'
      ansible.builtin.command: 'lsb_release -si'
      register: OsDistribution

    - name: 'Read codename of OS distribution'
      ansible.builtin.command: 'lsb_release -cs'
      register: OsCodename

    - name: 'Fail if OS distribution is not Ubuntu'
      ansible.builtin.fail:
        msg: 'Currently only Ubuntu 20.04 and Ubuntu 22.04 are supported by ansible scripting.'
      when: OsDistribution.stdout != 'Ubuntu'
    # =========================
    # Update the server 
    # ==========================
    #
    - name: Update apt cache and upgrade server.
      ansible.builtin.apt:
        upgrade: true
        update_cache: true
        cache_valid_time: 86400 # Once day between updates
      register: AptReturnCode
      until: AptReturnCode is success
      retries: 10
      delay: 10
    # =========================
    # Intall the MAAS packages
    # =========================
    #
    - name: Set iptables variables
      ansible.builtin.set_fact:
        default_interface: "{{ ansible_default_ipv4.interface  }}"
        default_ip: "{{ ansible_default_ipv4.address }}"

    - name: Install MAAS snap package
      ansible.builtin.command: snap install --channel=latest/stable lxd

    - name: Install refresh MAAS snap package
      ansible.builtin.command: snap refresh --channel=latest/stable lxd
    
    - name: Install MAAS package for both Region and Rack
      ansible.builtin.command: snap install maas

    - name: Install the test db for MAAS
      ansible.builtin.command: snap install maas-test-db

    - name: Initializing MAAS setup
      ansible.builtin.debug:
        msg: maas init region+rack --database-uri maas-test-db:/// --maas-url http://{{ default_ip }}:5240/MAAS

    - name: Init MAAS
      ansible.builtin.command: maas init region+rack --database-uri maas-test-db:/// --maas-url http://{{ default_ip }}:5240/MAAS
    # =========================
    # Setup networking
    # =========================
    - name: Enable IPv4 forward in the /etc/sysctl.conf
      ansible.builtin.lineinfile:
        path: /etc/sysctl.conf
        regexp: '^(# *){0,1}net\.ipv4\.ip_forward *='
        line: net.ipv4.ip_forward=1

    - name: Setup IP tables
      ansible.builtin.command: 'iptables -t nat -A POSTROUTING -o {{ default_interface }} -j SNAT --to {{ default_ip }}'
      register: IPV4_NAT

    - name: Install persistent iptables for IPv4 and IPv6
      ansible.builtin.shell: |
        echo 'iptables-persistent iptables-persistent/autosave_v4 boolean true' >  iptables-persistent-autosave;
        echo 'iptables-persistent iptables-persistent/autosave_v6 boolean true' >> iptables-persistent-autosave;
        debconf-set-selections iptables-persistent-autosave;
      register: IP_TABLES_PERSISTENT
      failed_when: IP_TABLES_PERSISTENT.rc != 0
    # =========================
    # Setup the server to be more informative
    # Improve UX with useful tools
    # =========================
    - name: Install mandatory apt packages
      ansible.builtin.apt:
        name:
          - jq
          - git 
          - iptables-persistent
          - openssh-server
          - curl
        state: present
        update_cache: true
      register: AptReqReturnCode
      until: AptReqReturnCode is success
      retries: 10
      delay: 10
      
    - name: Install optional apt packages and tools
      ansible.builtin.apt:
        name:
          - vim
          - htop
          - tmux
          - wget
          - neofetch
          - figlet 
          - toilet
        state: present
        update_cache: true
      register: AptOptReturnCode
      until: AptOptReturnCode is success
      retries: 10
      delay: 10
      failed_when: false
      when: MINIMAL_INSTALL is not defined

    - name: Add the hostname to the message of the day
      ansible.builtin.shell: 'toilet -f slant $(hostname) -F metal > /etc/motd'
      register: MOTD
      failed_when: false
      when:
        - AptOptReturnCode is success      
        - MINIMAL_INSTALL is not defined

  handlers: